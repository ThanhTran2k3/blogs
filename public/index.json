[{"content":"\u003ch1 id=\"các-phiên-bản-đột-phá-trong-java\"\u003eCác Phiên Bản Đột Phá Trong Java\u003c/h1\u003e\n\u003cp\u003eJava đã trải qua nhiều phiên bản và mỗi phiên bản mới đều mang đến những cải tiến đột phá, thay đổi cách lập trình viên phát triển ứng dụng và tối ưu hiệu suất. Dưới đây là các phiên bản đột phá trong lịch sử Java, mỗi phiên bản đều có những tính năng mang tính cách mạng, thay đổi hướng phát triển của ngôn ngữ này.\u003c/p\u003e\n\u003chr\u003e\n\u003ch3 id=\"1-java-10-1996--bước-đột-phá-đầu-tiên\"\u003e\u003cstrong\u003e1. Java 1.0 (1996) – Bước đột phá đầu tiên\u003c/strong\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eNgày phát hành\u003c/strong\u003e: 23 tháng 5, 1996\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eTính năng đột phá\u003c/strong\u003e: Phiên bản đầu tiên của Java, Java 1.0, đã đánh dấu một bước ngoặt lớn trong ngành công nghiệp phần mềm với khả năng \u003cstrong\u003eWrite Once, Run Anywhere\u003c/strong\u003e (WORA). Điều này có nghĩa là mã Java được biên dịch thành bytecode và có thể chạy trên bất kỳ nền tảng nào có cài đặt Java Virtual Machine (JVM), khắc phục vấn đề tương thích giữa các hệ điều hành khác nhau. Đây là cơ sở để Java trở thành ngôn ngữ lập trình phổ biến trên toàn cầu.\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"2-java-12-1998--j2se-và-cải-tiến-giao-diện-người-dùng\"\u003e\u003cstrong\u003e2. Java 1.2 (1998) – J2SE và Cải tiến Giao Diện Người Dùng\u003c/strong\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eNgày phát hành\u003c/strong\u003e: 8 tháng 12, 1998\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eTính năng đột phá\u003c/strong\u003e:\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eSwing\u003c/strong\u003e: Java 1.2 đã giới thiệu Swing, một thư viện GUI (giao diện người dùng) mới thay thế AWT. Swing giúp phát triển các giao diện người dùng linh hoạt, đẹp mắt và dễ dàng hơn nhiều so với AWT.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eJava Collections Framework\u003c/strong\u003e: Cung cấp các cấu trúc dữ liệu mới như danh sách, bản đồ, tập hợp, giúp lập trình viên dễ dàng thao tác với dữ liệu.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"3-java-5-2004--cải-tiến-ngôn-ngữ-với-generics-và-annotations\"\u003e\u003cstrong\u003e3. Java 5 (2004) – Cải Tiến Ngôn Ngữ với Generics và Annotations\u003c/strong\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eNgày phát hành\u003c/strong\u003e: 30 tháng 9, 2004\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eTính năng đột phá\u003c/strong\u003e:\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eGenerics\u003c/strong\u003e: Giới thiệu khái niệm Generics, giúp lập trình viên viết mã tổng quát hơn, an toàn hơn về kiểu dữ liệu mà không cần phải lo lắng về các lỗi kiểu dữ liệu vào thời gian chạy.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eAnnotations\u003c/strong\u003e: Cung cấp cách thức mới để bổ sung thông tin về mã nguồn thông qua annotations, làm cho mã nguồn dễ hiểu hơn và hỗ trợ các công cụ như frameworks (Spring, Hibernate).\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eAutoboxing và Unboxing\u003c/strong\u003e: Tự động chuyển đổi giữa kiểu nguyên thủy và các đối tượng wrapper của chúng, giúp mã nguồn ngắn gọn và dễ dàng hơn.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"4-java-8-2014--lambda-expressions-và-streams-api\"\u003e\u003cstrong\u003e4. Java 8 (2014) – Lambda Expressions và Streams API\u003c/strong\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eNgày phát hành\u003c/strong\u003e: 18 tháng 3, 2014\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eTính năng đột phá\u003c/strong\u003e:\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eLambda Expressions\u003c/strong\u003e: Giới thiệu Lambda Expressions, cho phép lập trình viên viết các biểu thức hàm (function expressions) ngắn gọn và dễ đọc, đặc biệt là khi làm việc với các API như Streams.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eStreams API\u003c/strong\u003e: Cung cấp một cách thức mới để xử lý bộ dữ liệu (collections) theo cách khai báo, dễ dàng và hiệu quả hơn, đặc biệt hỗ trợ thao tác song song (parallel processing).\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eDefault Methods\u003c/strong\u003e: Cho phép các phương thức mặc định trong interfaces, giúp mở rộng các interfaces mà không làm gián đoạn các lớp triển khai trước đó.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"5-java-9-2017--hệ-thống-mô-đun-modular-system\"\u003e\u003cstrong\u003e5. Java 9 (2017) – Hệ Thống Mô-đun (Modular System)\u003c/strong\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eNgày phát hành\u003c/strong\u003e: 21 tháng 9, 2017\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eTính năng đột phá\u003c/strong\u003e:\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eJava Platform Module System (JPMS)\u003c/strong\u003e: Giới thiệu hệ thống mô-đun giúp chia Java thành các mô-đun nhỏ gọn, giúp dễ dàng duy trì, phát triển và tái sử dụng mã nguồn. Điều này rất hữu ích đối với các ứng dụng lớn và giúp Java dễ dàng hơn trong việc phát triển microservices.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eJShell\u003c/strong\u003e: Cung cấp một công cụ REPL (Read-Eval-Print Loop) giúp thử nghiệm mã Java trực tiếp mà không cần phải tạo ra một lớp chính.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"6-java-8-đến-java-11-20142018--các-cải-tiến-quan-trọng-và-tính-năng-mới\"\u003e\u003cstrong\u003e6. Java 8 đến Java 11 (2014–2018) – Các Cải Tiến Quan Trọng và Tính Năng Mới\u003c/strong\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eJava 8\u003c/strong\u003e: Tính năng đột phá là \u003cstrong\u003eLambda Expressions\u003c/strong\u003e và \u003cstrong\u003eStreams API\u003c/strong\u003e, mở ra một cách tiếp cận lập trình hàm (functional programming) cho Java, giúp mã nguồn trở nên ngắn gọn và dễ bảo trì.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eJava 9\u003c/strong\u003e: Hệ thống \u003cstrong\u003eJava Module System\u003c/strong\u003e là một trong những thay đổi quan trọng, giúp tổ chức mã nguồn Java theo mô-đun, giải quyết vấn đề về quản lý thư viện và phụ thuộc trong các ứng dụng phức tạp.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eJava 10\u003c/strong\u003e: Giới thiệu \u003cstrong\u003eLocal Variable Type Inference\u003c/strong\u003e với từ khóa \u003ccode\u003evar\u003c/code\u003e, cho phép Java suy luận kiểu của biến mà không cần phải khai báo kiểu, giúp mã nguồn gọn gàng và dễ hiểu hơn.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eJava 11\u003c/strong\u003e: Thư viện \u003cstrong\u003eHTTP Client\u003c/strong\u003e mới chính thức được đưa vào, giúp tương tác với các API HTTP/2 và giải quyết các vấn đề về kết nối mạng trong Java.\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"7-java-1216-2019-2021--mô-hình-cập-nhật-mới-và-cải-tiến-tính-năng\"\u003e\u003cstrong\u003e7. Java 12–16 (2019-2021) – Mô Hình Cập Nhật Mới và Cải Tiến Tính Năng\u003c/strong\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eTính năng đột phá\u003c/strong\u003e:\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eJEP 355 (ZGC)\u003c/strong\u003e: Giới thiệu Garbage Collector ZGC với mục tiêu giảm thiểu độ trễ của hệ thống và cải thiện hiệu suất thu gom rác.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSwitch Expressions\u003c/strong\u003e: Java 12 giới thiệu cú pháp \u003cstrong\u003eswitch expression\u003c/strong\u003e, cho phép \u003ccode\u003eswitch\u003c/code\u003e trả về giá trị và dễ dàng hơn trong việc sử dụng.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"8-java-17-2021--phiên-bản-lts-mới\"\u003e\u003cstrong\u003e8. Java 17 (2021) – Phiên Bản LTS Mới\u003c/strong\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eNgày phát hành\u003c/strong\u003e: 14 tháng 9, 2021\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eTính năng đột phá\u003c/strong\u003e:\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eLTS (Long-Term Support)\u003c/strong\u003e: Java 17 là phiên bản LTS tiếp theo sau Java 11, với các cải tiến về hiệu suất, bảo mật, và các tính năng mới đáng chú ý như \u003cstrong\u003ePattern Matching\u003c/strong\u003e cho \u003ccode\u003einstanceof\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eJEP 382 (New macOS Rendering Pipeline)\u003c/strong\u003e: Cải tiến hiệu suất đồ họa trên macOS với một pipeline đồ họa mới dựa trên Apple Metal.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"9-java-21-2023--phiên-bản-lts-với-các-tính-năng-mới\"\u003e\u003cstrong\u003e9. Java 21 (2023) – Phiên Bản LTS với Các Tính Năng Mới\u003c/strong\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eNgày phát hành\u003c/strong\u003e: 19 tháng 9, 2023\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eTính năng đột phá\u003c/strong\u003e:\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eVirtual Threads\u003c/strong\u003e: Tính năng này giúp Java hỗ trợ hàng triệu luồng một cách hiệu quả mà không tốn nhiều tài nguyên hệ thống. Điều này giúp xây dựng các ứng dụng bất đồng bộ mạnh mẽ hơn, đặc biệt cho các ứng dụng web hoặc microservices.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eRecord Patterns\u003c/strong\u003e: Mở rộng các tính năng của Record, giúp làm việc với các lớp Record trở nên linh hoạt hơn trong khi vẫn giữ được sự đơn giản.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePattern Matching for Switch\u003c/strong\u003e: Thêm hỗ trợ đối với việc sử dụng pattern matching trong các biểu thức \u003ccode\u003eswitch\u003c/code\u003e, giúp mã nguồn trở nên ngắn gọn và dễ bảo trì hơn.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eImproved Garbage Collection\u003c/strong\u003e: Cải thiện hiệu suất của Garbage Collection giúp giảm thiểu độ trễ trong các ứng dụng Java phức tạp và quy mô lớn.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"kết-luận\"\u003e\u003cstrong\u003eKết luận\u003c/strong\u003e\u003c/h3\u003e\n\u003cp\u003eMỗi phiên bản Java đều mang đến những tính năng đột phá quan trọng, giúp ngôn ngữ này không ngừng phát triển và duy trì vị thế của mình trong thế giới phát triển phần mềm. Java không chỉ là một ngôn ngữ lập trình mạnh mẽ mà còn là một nền tảng linh hoạt, thích hợp cho cả ứng dụng đơn giản và các hệ thống phân tán, quy mô lớn.\u003c/p\u003e\n","description":null,"image":"/images/post/java_version.jpg","permalink":"http://localhost:1313/blogs/java_version/","title":"Lịch Sử phát triển ngôn ngữ lập trình Java"},{"content":"\u003ch1 id=\"java-là-gì\"\u003eJava là gì?\u003c/h1\u003e\n\u003cp\u003eJava là một ngôn ngữ lập trình bậc cao, hướng đối tượng, được thiết kế để giúp các lập trình viên phát triển các ứng dụng phần mềm mạnh mẽ và bảo mật cao. Java là một ngôn ngữ đa nền tảng có nghĩa là ứng dụng Java có thể chạy trên nhiều hệ điều hành khác nhau mà không cần phải biên dịch lại. Java được phát triển bởi Sun Microsystems, do James Gosling sáng lập, và lần đầu tiên được công bố vào năm 1995.\u003c/p\u003e\n\u003ch1 id=\"các-tính-năng-nổi-bật-của-java\"\u003eCác tính năng nổi bật của Java\u003c/h1\u003e\n\u003ch2 id=\"1-hướng-đối-tượng-oop\"\u003e1. Hướng đối tượng (OOP)\u003c/h2\u003e\n\u003cp\u003eTrong Java, tất cả đều là đối tượng (Object), giúp dễ dàng mở rộng và bảo trì ứng dụng. Ngôn ngữ này không hỗ trợ các tính năng phức tạp như con trỏ hay các cấu trúc dữ liệu như struct và union, giúp giảm thiểu lỗi và tăng cường tính bảo mật.\u003c/p\u003e\n\u003ch2 id=\"2-nền-tảng-độc-lập\"\u003e2. Nền tảng độc lập\u003c/h2\u003e\n\u003cp\u003eMột trong những đặc điểm nổi bật của Java là khả năng chạy trên nhiều hệ điều hành và nền tảng khác nhau mà không gặp phải sự cố tương thích. Điều này được thực hiện nhờ vào Java Virtual Machine (JVM), cho phép mã byte code của Java chạy trên bất kỳ nền tảng nào có cài đặt JVM.\u003c/p\u003e\n\u003ch2 id=\"3-bảo-mật\"\u003e3. Bảo mật\u003c/h2\u003e\n\u003cp\u003eJava cung cấp các tính năng bảo mật mạnh mẽ, bao gồm mã hóa, xác thực và kiểm tra các lớp mã trước khi thực thi, đảm bảo các ứng dụng Java luôn an toàn khỏi các mối đe dọa và virus.\u003c/p\u003e\n\u003ch2 id=\"4-đơn-giản-và-dễ-học\"\u003e4. Đơn giản và dễ học\u003c/h2\u003e\n\u003cp\u003eJava được thiết kế đơn giản và dễ sử dụng, với cú pháp rõ ràng và dễ hiểu, thích hợp cho cả người mới bắt đầu và các lập trình viên chuyên nghiệp. Java loại bỏ các tính năng phức tạp, giúp giảm thiểu rủi ro và làm cho quá trình lập trình trở nên mượt mà.\u003c/p\u003e\n\u003ch2 id=\"5-đa-luồng-multithreading\"\u003e5. Đa luồng (Multithreading)\u003c/h2\u003e\n\u003cp\u003eJava hỗ trợ lập trình đa luồng, cho phép các ứng dụng thực hiện nhiều tác vụ đồng thời mà không làm gián đoạn quá trình của các tác vụ khác. Điều này giúp cải thiện hiệu suất và khả năng tương tác của ứng dụng.\u003c/p\u003e\n","description":null,"image":"/images/post/java_about.jpg","permalink":"http://localhost:1313/blogs/java-introduction-/","title":"Ngôn ngữ lập trình Java"},{"content":"\u003ch1 id=\"stream-api-và-lambda-expressions-trong-java-cách-mạng-hóa-lập-trình-hàm\"\u003eStream API và Lambda Expressions trong Java: Cách mạng hóa lập trình hàm\u003c/h1\u003e\n\u003cp\u003eJava đã có một chặng đường dài kể từ khi ra đời, và phiên bản Java 8 đánh dấu một bước ngoặt lớn với việc giới thiệu Stream API và Lambda Expressions. Những tính năng này đã thay đổi cách chúng ta viết mã Java, đặc biệt là trong việc xử lý dữ liệu và tối ưu hóa các tác vụ phức tạp. Trong bài viết này, chúng ta sẽ cùng tìm hiểu chi tiết về Stream API và Lambda Expressions, những tính năng đột phá trong Java 8, và cách chúng giúp đơn giản hóa mã nguồn, tăng tính hiệu quả và dễ bảo trì.\u003c/p\u003e\n\u003ch2 id=\"lambda-expressions-viết-mã-ngắn-gọn-và-dễ-dàng-hơn\"\u003eLambda Expressions: Viết Mã Ngắn Gọn và Dễ Dàng Hơn\u003c/h2\u003e\n\u003ch3 id=\"lambda-là-gì\"\u003eLambda là gì?\u003c/h3\u003e\n\u003cp\u003eLambda Expressions là một khái niệm đến từ lập trình hàm (Functional Programming), cho phép bạn định nghĩa các hàm vô danh (anonymous functions) mà không cần phải tạo các class hay phương thức riêng biệt. Trước khi Java 8 ra đời, để sử dụng một hàm kiểu function, bạn phải định nghĩa một class ẩn danh, điều này khá phức tạp và làm mã nguồn dài dòng. Lambda Expressions giúp đơn giản hóa quá trình này.\u003c/p\u003e\n\u003ch3 id=\"cú-pháp-cơ-bản-của-lambda\"\u003eCú pháp cơ bản của Lambda:\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e(parameters) \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e expression\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"ví-dụ-về-lambda-expression\"\u003eVí dụ về Lambda Expression\u003c/h3\u003e\n\u003cp\u003eGiả sử bạn có một danh sách các số nguyên và muốn in ra các số chẵn trong danh sách đó. Trước khi Java 8, bạn sẽ phải sử dụng một vòng lặp như sau:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eList\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eInteger\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e numbers \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e Arrays.\u003cspan style=\"color:#a6e22e\"\u003easList\u003c/span\u003e(1, 2, 3, 4, 5, 6);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e (Integer number : numbers) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e (number \u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e 2 \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e 0) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        System.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eprintln\u003c/span\u003e(number);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eVới Lambda Expressions, mã nguồn trở nên ngắn gọn và dễ đọc hơn:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enumbers.\u003cspan style=\"color:#a6e22e\"\u003estream\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e       .\u003cspan style=\"color:#a6e22e\"\u003efilter\u003c/span\u003e(n \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e n \u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e 2 \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e 0)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e       .\u003cspan style=\"color:#a6e22e\"\u003eforEach\u003c/span\u003e(System.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e::println);\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eỞ đây, \u003ccode\u003en -\u0026gt; n % 2 == 0\u003c/code\u003e là Lambda Expression, giúp lọc các số chẵn trong danh sách, và \u003ccode\u003eSystem.out::println\u003c/code\u003e là một cách tham chiếu phương thức (method reference) để in kết quả.\u003c/p\u003e\n\u003ch2 id=\"stream-api-xử-lý-dữ-liệu-linh-hoạt-và-hiệu-quả\"\u003eStream API: Xử Lý Dữ Liệu Linh Hoạt và Hiệu Quả\u003c/h2\u003e\n\u003ch3 id=\"stream-là-gì\"\u003eStream là gì?\u003c/h3\u003e\n\u003cp\u003eStream API trong Java cung cấp một cách thức mới và mạnh mẽ để xử lý các bộ dữ liệu (collections), đặc biệt là với các tác vụ như lọc, map, reduce và thao tác song song. Điều này giúp bạn xử lý dữ liệu theo cách khai báo (declarative style), thay vì phải viết các vòng lặp và điều kiện.\u003c/p\u003e\n\u003cp\u003eMột Stream không phải là một dữ liệu trong bộ sưu tập mà là một chuỗi các thao tác có thể thực hiện trên bộ sưu tập đó. Các thao tác trên Stream thường được chia thành hai loại:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eCác thao tác trung gian (Intermediate operations):\u003c/strong\u003e Các thao tác này tạo ra một stream mới và có thể kết hợp lại với nhau.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eCác thao tác kết thúc (Terminal operations):\u003c/strong\u003e Các thao tác này sẽ kích hoạt các phép toán thực tế trên Stream, ví dụ như \u003ccode\u003eforEach\u003c/code\u003e, \u003ccode\u003ecollect\u003c/code\u003e, \u003ccode\u003ereduce\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"ví-dụ-về-stream-api\"\u003eVí dụ về Stream API\u003c/h3\u003e\n\u003cp\u003eGiả sử bạn có một danh sách các số nguyên và muốn tính tổng của các số chẵn trong danh sách. Trước Java 8, bạn sẽ phải viết một vòng lặp và điều kiện phức tạp:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eList\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eInteger\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e numbers \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e Arrays.\u003cspan style=\"color:#a6e22e\"\u003easList\u003c/span\u003e(1, 2, 3, 4, 5, 6);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e sum \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e 0;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e (Integer number : numbers) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e (number \u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e 2 \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e 0) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        sum \u003cspan style=\"color:#f92672\"\u003e+=\u003c/span\u003e number;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eSystem.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eprintln\u003c/span\u003e(sum);\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eVới Stream API, bạn có thể làm điều này ngắn gọn hơn:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e sum \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e numbers.\u003cspan style=\"color:#a6e22e\"\u003estream\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                  .\u003cspan style=\"color:#a6e22e\"\u003efilter\u003c/span\u003e(n \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e n \u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e 2 \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e 0)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                  .\u003cspan style=\"color:#a6e22e\"\u003emapToInt\u003c/span\u003e(Integer::intValue)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                  .\u003cspan style=\"color:#a6e22e\"\u003esum\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eSystem.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eprintln\u003c/span\u003e(sum);\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eỞ đây:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003efilter(n -\u0026gt; n % 2 == 0)\u003c/code\u003e lọc ra các số chẵn.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003emapToInt(Integer::intValue)\u003c/code\u003e chuyển đổi các đối tượng Integer thành kiểu int để tính toán.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003esum()\u003c/code\u003e tính tổng các giá trị.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"các-tính-năng-nổi-bật-của-stream-api\"\u003eCác Tính Năng Nổi Bật Của Stream API\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eLọc (filter):\u003c/strong\u003e Lọc các phần tử trong Stream theo một điều kiện cho trước.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eList\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eInteger\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e evenNumbers \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e numbers.\u003cspan style=\"color:#a6e22e\"\u003estream\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                                   .\u003cspan style=\"color:#a6e22e\"\u003efilter\u003c/span\u003e(n \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e n \u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e 2 \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e 0)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                                   .\u003cspan style=\"color:#a6e22e\"\u003ecollect\u003c/span\u003e(Collectors.\u003cspan style=\"color:#a6e22e\"\u003etoList\u003c/span\u003e());\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eChuyển đổi (map):\u003c/strong\u003e Chuyển đổi các phần tử trong Stream thành các giá trị mới.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eList\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eInteger\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e doubledNumbers \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e numbers.\u003cspan style=\"color:#a6e22e\"\u003estream\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                                      .\u003cspan style=\"color:#a6e22e\"\u003emap\u003c/span\u003e(n \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e n \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e 2)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                                      .\u003cspan style=\"color:#a6e22e\"\u003ecollect\u003c/span\u003e(Collectors.\u003cspan style=\"color:#a6e22e\"\u003etoList\u003c/span\u003e());\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eTính tổng (reduce):\u003c/strong\u003e Thực hiện các phép toán (như cộng, nhân) trên các phần tử trong Stream.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e sum \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e numbers.\u003cspan style=\"color:#a6e22e\"\u003estream\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                 .\u003cspan style=\"color:#a6e22e\"\u003ereduce\u003c/span\u003e(0, Integer::sum);\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eXử lý song song (parallel):\u003c/strong\u003e Stream API hỗ trợ xử lý song song, giúp tăng hiệu suất trong các ứng dụng đa lõi.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e sum \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e numbers.\u003cspan style=\"color:#a6e22e\"\u003eparallelStream\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                 .\u003cspan style=\"color:#a6e22e\"\u003efilter\u003c/span\u003e(n \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e n \u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e 2 \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e 0)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                 .\u003cspan style=\"color:#a6e22e\"\u003emapToInt\u003c/span\u003e(Integer::intValue)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                 .\u003cspan style=\"color:#a6e22e\"\u003esum\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"kết-hợp-lambda-expressions-và-stream-api\"\u003eKết hợp Lambda Expressions và Stream API\u003c/h2\u003e\n\u003cp\u003eSự kết hợp giữa Lambda Expressions và Stream API tạo ra một cách tiếp cận cực kỳ mạnh mẽ và linh hoạt để xử lý dữ liệu trong Java. Lambda giúp giảm độ phức tạp khi định nghĩa các hàm, còn Stream API giúp thao tác dữ liệu một cách khai báo và dễ dàng, đồng thời hỗ trợ các phép toán song song hiệu quả.\u003c/p\u003e\n\u003cp\u003eDưới đây là ví dụ kết hợp giữa Lambda và Stream API để tìm kiếm các số chẵn trong danh sách, sau đó nhân đôi giá trị của chúng và tính tổng:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e result \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e numbers.\u003cspan style=\"color:#a6e22e\"\u003estream\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                    .\u003cspan style=\"color:#a6e22e\"\u003efilter\u003c/span\u003e(n \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e n \u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e 2 \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e 0)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                    .\u003cspan style=\"color:#a6e22e\"\u003emap\u003c/span\u003e(n \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e n \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e 2)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                    .\u003cspan style=\"color:#a6e22e\"\u003ereduce\u003c/span\u003e(0, Integer::sum);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eSystem.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eprintln\u003c/span\u003e(result);\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"kết-luận\"\u003eKết luận\u003c/h2\u003e\n\u003cp\u003eLambda Expressions và Stream API là hai tính năng nổi bật trong Java 8, thay đổi hoàn toàn cách chúng ta xử lý dữ liệu và viết mã. Sự kết hợp của chúng giúp Java không chỉ trở thành một ngôn ngữ mạnh mẽ mà còn linh hoạt và dễ bảo trì hơn, đặc biệt trong các ứng dụng yêu cầu xử lý dữ liệu phức tạp.\u003c/p\u003e\n\u003cp\u003eNếu bạn chưa sử dụng Lambda và Stream trong các dự án của mình, đây chính là thời điểm tuyệt vời để bắt đầu làm quen và ứng dụng chúng, giúp mã nguồn trở nên ngắn gọn, dễ hiểu và hiệu quả hơn.\u003c/p\u003e\n","description":null,"image":"/images/post/java_8.jpg","permalink":"http://localhost:1313/blogs/java_8/","title":"Stream API và Lambda Expressions trong Java 8"},{"content":"\u003ch1 id=\"stack-và-heap-trong-java\"\u003eStack và Heap trong Java\u003c/h1\u003e\n\u003cp\u003eTrong Java, bộ nhớ được phân chia thành hai khu vực chính \u003cstrong\u003eStack\u003c/strong\u003e và \u003cstrong\u003eHeap\u003c/strong\u003e. Mỗi khu vực có vai trò và cách thức quản lý bộ nhớ khác nhau, ảnh hưởng trực tiếp đến hiệu suất và cách thức hoạt động của ứng dụng Java. Hiểu rõ cách thức hoạt động của hai khu vực bộ nhớ này là điều quan trọng giúp bạn tối ưu hóa mã nguồn và tránh các lỗi phổ biến trong lập trình Java. Dưới đây là mô tả chi tiết về hai loại bộ nhớ này.\u003c/p\u003e\n\u003ch2 id=\"1-bộ-nhớ-stack\"\u003e1. Bộ Nhớ Stack\u003c/h2\u003e\n\u003cp\u003eBộ nhớ \u003cstrong\u003eStack\u003c/strong\u003e là khu vực lưu trữ các biến cục bộ và các thông tin về quá trình gọi phương thức. Mỗi khi một phương thức được gọi, một \u003cem\u003eframe\u003c/em\u003e (khung) mới sẽ được tạo ra trong Stack để chứa các biến cục bộ và địa chỉ trả về của phương thức đó. Khi phương thức hoàn thành, khung này sẽ được loại bỏ khỏi Stack.\u003c/p\u003e\n\u003ch3 id=\"đặc-điểm-của-stack\"\u003eĐặc Điểm của Stack:\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eTính chất LIFO\u003c/strong\u003e (Last In, First Out): Các giá trị được lưu vào Stack theo thứ tự của các lời gọi phương thức, và khi một phương thức hoàn thành, các giá trị sẽ được lấy ra theo thứ tự ngược lại.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eKhông gian có giới hạn\u003c/strong\u003e: Bộ nhớ Stack có dung lượng nhỏ hơn bộ nhớ Heap. Khi dung lượng này bị vượt quá (do quá nhiều lời gọi phương thức đệ quy hoặc sử dụng quá nhiều biến cục bộ), sẽ dẫn đến lỗi \u003ccode\u003eStackOverflowError\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eQuản lý bộ nhớ tự động\u003c/strong\u003e: Các biến trong Stack được tạo ra và hủy bỏ tự động khi phương thức được gọi và kết thúc.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"ví-dụ-về-sử-dụng-bộ-nhớ-stack\"\u003eVí Dụ về Sử Dụng Bộ Nhớ Stack:\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eStackExample\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003estatic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e(String\u003cspan style=\"color:#f92672\"\u003e[]\u003c/span\u003e args) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e x \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e 10; \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        System.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eprintln\u003c/span\u003e(x);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003erecursiveMethod\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        recursiveMethod(); \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"2-bộ-nhớ-heap\"\u003e2. Bộ Nhớ Heap\u003c/h2\u003e\n\u003cp\u003eBộ nhớ \u003cstrong\u003eHeap\u003c/strong\u003e là nơi lưu trữ các đối tượng và mảng trong Java. Khi bạn tạo một đối tượng bằng từ khóa \u003ccode\u003enew\u003c/code\u003e, bộ nhớ sẽ được cấp phát trong Heap. Bộ nhớ Heap có kích thước lớn hơn và được sử dụng để lưu trữ dữ liệu có thể thay đổi trong suốt vòng đời của chương trình.\u003c/p\u003e\n\u003ch3 id=\"đặc-điểm-của-heap\"\u003eĐặc Điểm của Heap:\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eDùng để lưu trữ đối tượng\u003c/strong\u003e: Các đối tượng trong Java, bao gồm mảng, đều được lưu trữ trong Heap.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eQuản lý bộ nhớ bằng Garbage Collection\u003c/strong\u003e: Bộ nhớ Heap được quản lý bởi \u003cem\u003eGarbage Collector\u003c/em\u003e, một cơ chế tự động giải phóng bộ nhớ không còn sử dụng nữa. Khi một đối tượng không còn được tham chiếu, Garbage Collector sẽ thu hồi bộ nhớ của nó.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eKích thước linh hoạt\u003c/strong\u003e: Bộ nhớ Heap có thể được mở rộng, tùy thuộc vào dung lượng bộ nhớ của hệ thống và cấu hình JVM.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eTốn thời gian quản lý\u003c/strong\u003e: Vì \u003cem\u003eGarbage Collection\u003c/em\u003e sẽ phải thực hiện việc dọn dẹp bộ nhớ không còn sử dụng, việc quản lý bộ nhớ trong Heap thường tốn thời gian và có thể ảnh hưởng đến hiệu suất.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"ví-dụ-về-sử-dụng-bộ-nhớ-heap\"\u003eVí Dụ về Sử Dụng Bộ Nhớ Heap:\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eHeapExample\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003estatic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e(String\u003cspan style=\"color:#f92672\"\u003e[]\u003c/span\u003e args) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        Person person \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e Person(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;John\u0026#34;\u003c/span\u003e, 30);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        System.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eprintln\u003c/span\u003e(person.\u003cspan style=\"color:#a6e22e\"\u003ename\u003c/span\u003e); \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ePerson\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    String name;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e age;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ePerson\u003c/span\u003e(String name, \u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e age) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003ethis\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ename\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e name;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003ethis\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eage\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e age;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"3-sự-khác-biệt-giữa-stack-và-heap\"\u003e3. Sự Khác Biệt Giữa Stack và Heap\u003c/h2\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e\u003cstrong\u003eĐặc điểm\u003c/strong\u003e\u003c/th\u003e\n          \u003cth\u003e\u003cstrong\u003eStack\u003c/strong\u003e\u003c/th\u003e\n          \u003cth\u003e\u003cstrong\u003eHeap\u003c/strong\u003e\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003eLưu trữ\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003eCác biến cục bộ và thông tin phương thức\u003c/td\u003e\n          \u003ctd\u003eCác đối tượng và mảng\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003eQuản lý bộ nhớ\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003eTự động, khi phương thức kết thúc thì bộ nhớ được giải phóng\u003c/td\u003e\n          \u003ctd\u003eBằng Garbage Collector, bộ nhớ được giải phóng khi không còn tham chiếu\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003eTốc độ truy cập\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003eNhanh hơn, vì các biến cục bộ được quản lý theo thứ tự LIFO\u003c/td\u003e\n          \u003ctd\u003eChậm hơn, vì cần kiểm tra và dọn dẹp bộ nhớ bằng Garbage Collection\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003eKích thước\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003eHạn chế, nhỏ hơn so với Heap\u003c/td\u003e\n          \u003ctd\u003eLớn và có thể thay đổi kích thước động\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003eThời gian sống\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003eNgắn, chỉ trong phạm vi của phương thức\u003c/td\u003e\n          \u003ctd\u003eDài hơn, tồn tại cho đến khi không còn tham chiếu đến đối tượng\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003eDùng cho\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003eCác biến cục bộ, tham số phương thức\u003c/td\u003e\n          \u003ctd\u003eCác đối tượng, mảng và dữ liệu có thể thay đổi\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch2 id=\"4-quản-lý-bộ-nhớ-trong-java\"\u003e4. Quản Lý Bộ Nhớ trong Java\u003c/h2\u003e\n\u003cp\u003eJava không yêu cầu lập trình viên phải quản lý bộ nhớ thủ công như trong các ngôn ngữ khác (như C/C++). JVM và Garbage Collector sẽ tự động giải phóng bộ nhớ không còn sử dụng. Tuy nhiên, việc hiểu rõ cách bộ nhớ Stack và Heap hoạt động sẽ giúp bạn tối ưu hóa ứng dụng của mình, tránh được lỗi như \u003ccode\u003eStackOverflowError\u003c/code\u003e và hiểu rõ hơn về cách bộ nhớ được cấp phát.\u003c/p\u003e\n\u003ch2 id=\"kết-luận\"\u003eKết Luận\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eBộ nhớ Stack\u003c/strong\u003e là nơi lưu trữ các biến cục bộ và thông tin về các cuộc gọi phương thức, có tốc độ truy cập nhanh và tự động quản lý bộ nhớ.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eBộ nhớ Heap\u003c/strong\u003e là nơi lưu trữ các đối tượng và mảng, có dung lượng lớn hơn nhưng cần được quản lý thông qua \u003cem\u003eGarbage Collection\u003c/em\u003e.\u003c/li\u003e\n\u003cli\u003eViệc phân biệt và hiểu rõ sự khác biệt giữa bộ nhớ Stack và Heap giúp bạn tối ưu hóa mã nguồn và tránh được các lỗi liên quan đến quản lý bộ nhớ trong Java.\u003c/li\u003e\n\u003c/ul\u003e\n","description":null,"image":"/images/post/java_stack.jpg","permalink":"http://localhost:1313/blogs/java_stack/","title":"Bộ nhớ Stack và Heap trong Java"},{"content":"\u003ch1 id=\"hiểu-rõ-về-java-collections-khám-phá-các-cấu-trúc-dữ-liệu-và-thao-tác\"\u003eHiểu Rõ Về Java Collections: Khám Phá Các Cấu Trúc Dữ Liệu và Thao Tác\u003c/h1\u003e\n\u003cp\u003eJava Collections Framework là một phần quan trọng trong lập trình Java, cung cấp các cấu trúc dữ liệu mạnh mẽ và các phương thức để thao tác với chúng. Việc hiểu rõ về các Collections trong Java sẽ giúp bạn viết mã hiệu quả và dễ bảo trì hơn. Trong bài viết này, chúng ta sẽ khám phá chi tiết về Java Collections, bao gồm các loại Collection phổ biến và các thao tác cơ bản mà bạn có thể thực hiện với chúng.\u003c/p\u003e\n\u003ch2 id=\"1-java-collections-framework-là-gì\"\u003e1. Java Collections Framework là gì?\u003c/h2\u003e\n\u003cp\u003eJava Collections Framework là một bộ sưu tập các lớp và giao diện cung cấp các cấu trúc dữ liệu như danh sách, tập hợp, bản đồ và các thao tác như tìm kiếm, sắp xếp và thao tác dữ liệu. Các cấu trúc dữ liệu này giúp bạn lưu trữ, truy cập và thao tác với dữ liệu một cách dễ dàng và hiệu quả.\u003c/p\u003e\n\u003ch3 id=\"các-thành-phần-chính-của-java-collections-framework\"\u003eCác thành phần chính của Java Collections Framework:\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eCollection Interface\u003c/strong\u003e: Đây là giao diện cơ sở cho tất cả các Collection trong Java.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eList, Set, Queue\u003c/strong\u003e: Các giao diện con của Collection, đại diện cho các loại Collection khác nhau.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eMap Interface\u003c/strong\u003e: Một giao diện độc lập không kế thừa từ Collection, dùng để lưu trữ các cặp key-value.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eImplementations\u003c/strong\u003e: Các lớp triển khai như ArrayList, HashSet, TreeMap cung cấp các cách thức cụ thể để lưu trữ dữ liệu.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eAlgorithms\u003c/strong\u003e: Các thuật toán như tìm kiếm, sắp xếp, và thao tác dữ liệu trong các Collection.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2-các-loại-collection-chính-trong-java\"\u003e2. Các Loại Collection Chính Trong Java\u003c/h2\u003e\n\u003ch3 id=\"21-list-interface\"\u003e2.1 List Interface\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eList\u003c/code\u003e là một giao diện trong Java Collections đại diện cho một danh sách có thể chứa các phần tử trùng lặp và các phần tử theo thứ tự. Các lớp triển khai của List bao gồm:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eArrayList\u003c/strong\u003e: Lớp phổ biến nhất, sử dụng một mảng động để lưu trữ các phần tử.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eLinkedList\u003c/strong\u003e: Sử dụng danh sách liên kết để lưu trữ phần tử, hiệu quả hơn khi thực hiện các thao tác chèn và xóa.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eVector\u003c/strong\u003e: Tương tự như ArrayList, nhưng được đồng bộ hóa.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"ví-dụ-sử-dụng-arraylist\"\u003eVí dụ sử dụng ArrayList:\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eList\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eString\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e fruits \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e ArrayList\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u0026gt;\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003efruits.\u003cspan style=\"color:#a6e22e\"\u003eadd\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Apple\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003efruits.\u003cspan style=\"color:#a6e22e\"\u003eadd\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Banana\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003efruits.\u003cspan style=\"color:#a6e22e\"\u003eadd\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Orange\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e (String fruit : fruits) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    System.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eprintln\u003c/span\u003e(fruit);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"22-set-interface\"\u003e2.2 Set Interface\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eSet\u003c/code\u003e là một giao diện đại diện cho một tập hợp không chứa các phần tử trùng lặp. Các lớp triển khai của Set bao gồm:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eHashSet\u003c/strong\u003e: Không giữ thứ tự các phần tử, nhưng tìm kiếm và thêm phần tử rất nhanh.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eLinkedHashSet\u003c/strong\u003e: Giữ thứ tự chèn các phần tử.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eTreeSet\u003c/strong\u003e: Sắp xếp các phần tử theo thứ tự tự nhiên hoặc theo một Comparator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"ví-dụ-sử-dụng-hashset\"\u003eVí dụ sử dụng HashSet:\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eSet\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eString\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e colors \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e HashSet\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u0026gt;\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecolors.\u003cspan style=\"color:#a6e22e\"\u003eadd\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Red\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecolors.\u003cspan style=\"color:#a6e22e\"\u003eadd\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Green\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecolors.\u003cspan style=\"color:#a6e22e\"\u003eadd\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Blue\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecolors.\u003cspan style=\"color:#a6e22e\"\u003eadd\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Red\u0026#34;\u003c/span\u003e);  \u003cspan style=\"color:#75715e\"\u003e// Duplicated element, will not be added\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e (String color : colors) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    System.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eprintln\u003c/span\u003e(color);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"23-queue-interface\"\u003e2.3 Queue Interface\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eQueue\u003c/code\u003e là một giao diện đại diện cho một hàng đợi, thường được sử dụng trong các ứng dụng cần xử lý theo kiểu FIFO (First In, First Out). Các lớp triển khai của Queue bao gồm:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eLinkedList\u003c/strong\u003e: Cũng triển khai Queue, hỗ trợ các thao tác hàng đợi hiệu quả.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePriorityQueue\u003c/strong\u003e: Xử lý các phần tử theo độ ưu tiên thay vì theo thứ tự chèn.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"ví-dụ-sử-dụng-priorityqueue\"\u003eVí dụ sử dụng PriorityQueue:\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eQueue\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eInteger\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e queue \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e PriorityQueue\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u0026gt;\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003equeue.\u003cspan style=\"color:#a6e22e\"\u003eoffer\u003c/span\u003e(10);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003equeue.\u003cspan style=\"color:#a6e22e\"\u003eoffer\u003c/span\u003e(20);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003equeue.\u003cspan style=\"color:#a6e22e\"\u003eoffer\u003c/span\u003e(5);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003ewhile\u003c/span\u003e (\u003cspan style=\"color:#f92672\"\u003e!\u003c/span\u003equeue.\u003cspan style=\"color:#a6e22e\"\u003eisEmpty\u003c/span\u003e()) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    System.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eprintln\u003c/span\u003e(queue.\u003cspan style=\"color:#a6e22e\"\u003epoll\u003c/span\u003e());\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"24-map-interface\"\u003e2.4 Map Interface\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eMap\u003c/code\u003e là một giao diện đại diện cho một cấu trúc dữ liệu lưu trữ các cặp key-value. Các lớp triển khai của Map bao gồm:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eHashMap\u003c/strong\u003e: Không đảm bảo thứ tự của các phần tử, rất nhanh trong việc truy xuất và thêm phần tử.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eTreeMap\u003c/strong\u003e: Sắp xếp các phần tử theo thứ tự tự nhiên của keys hoặc theo một Comparator.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eLinkedHashMap\u003c/strong\u003e: Duy trì thứ tự của các phần tử dựa trên thứ tự chèn.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"ví-dụ-sử-dụng-hashmap\"\u003eVí dụ sử dụng HashMap:\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eMap\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eString, Integer\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e map \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e HashMap\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u0026gt;\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emap.\u003cspan style=\"color:#a6e22e\"\u003eput\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Apple\u0026#34;\u003c/span\u003e, 1);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emap.\u003cspan style=\"color:#a6e22e\"\u003eput\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Banana\u0026#34;\u003c/span\u003e, 2);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emap.\u003cspan style=\"color:#a6e22e\"\u003eput\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Orange\u0026#34;\u003c/span\u003e, 3);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e (Map.\u003cspan style=\"color:#a6e22e\"\u003eEntry\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eString, Integer\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e entry : map.\u003cspan style=\"color:#a6e22e\"\u003eentrySet\u003c/span\u003e()) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    System.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eprintln\u003c/span\u003e(entry.\u003cspan style=\"color:#a6e22e\"\u003egetKey\u003c/span\u003e() \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;: \u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e entry.\u003cspan style=\"color:#a6e22e\"\u003egetValue\u003c/span\u003e());\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"3-các-phương-thức-thao-tác-với-collection\"\u003e3. Các Phương Thức Thao Tác Với Collection\u003c/h2\u003e\n\u003cp\u003eJava Collections Framework cung cấp nhiều phương thức hữu ích để thao tác với các Collection. Dưới đây là một số phương thức phổ biến:\u003c/p\u003e\n\u003ch3 id=\"31-thêm-phần-tử\"\u003e3.1 Thêm phần tử\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eList\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eString\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e list \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e ArrayList\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u0026gt;\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003elist.\u003cspan style=\"color:#a6e22e\"\u003eadd\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Apple\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003elist.\u003cspan style=\"color:#a6e22e\"\u003eadd\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Banana\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"32-kiểm-tra-phần-tử-có-tồn-tại-không\"\u003e3.2 Kiểm tra phần tử có tồn tại không\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eboolean\u003c/span\u003e contains \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e list.\u003cspan style=\"color:#a6e22e\"\u003econtains\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Apple\u0026#34;\u003c/span\u003e); \u003cspan style=\"color:#75715e\"\u003e// Returns true\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"33-loại-bỏ-phần-tử\"\u003e3.3 Loại bỏ phần tử\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003elist.\u003cspan style=\"color:#a6e22e\"\u003eremove\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Banana\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"34-lọc-phần-tử-với-stream-api\"\u003e3.4 Lọc phần tử (với Stream API)\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eList\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eInteger\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e numbers \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e Arrays.\u003cspan style=\"color:#a6e22e\"\u003easList\u003c/span\u003e(1, 2, 3, 4, 5, 6);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eList\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eInteger\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e evenNumbers \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e numbers.\u003cspan style=\"color:#a6e22e\"\u003estream\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                                   .\u003cspan style=\"color:#a6e22e\"\u003efilter\u003c/span\u003e(n \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e n \u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e 2 \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e 0)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                                   .\u003cspan style=\"color:#a6e22e\"\u003ecollect\u003c/span\u003e(Collectors.\u003cspan style=\"color:#a6e22e\"\u003etoList\u003c/span\u003e());\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eSystem.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eprintln\u003c/span\u003e(evenNumbers); \u003cspan style=\"color:#75715e\"\u003e// Output: [2, 4, 6]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"35-sắp-xếp-collection\"\u003e3.5 Sắp xếp Collection\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eList\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eInteger\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e numbers \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e Arrays.\u003cspan style=\"color:#a6e22e\"\u003easList\u003c/span\u003e(3, 1, 4, 1, 5, 9);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eCollections.\u003cspan style=\"color:#a6e22e\"\u003esort\u003c/span\u003e(numbers);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eSystem.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eprintln\u003c/span\u003e(numbers); \u003cspan style=\"color:#75715e\"\u003e// Output: [1, 1, 3, 4, 5, 9]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"4-các-thực-hành-tốt-khi-làm-việc-với-collections\"\u003e4. Các Thực Hành Tốt Khi Làm Việc Với Collections\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eChọn loại Collection phù hợp\u003c/strong\u003e: Tùy thuộc vào yêu cầu về hiệu suất và loại dữ liệu, bạn nên chọn giữa các loại Collection như ArrayList, HashSet, TreeMap, v.v.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eTránh sử dụng null trong Collection\u003c/strong\u003e: Một số Collection như HashSet và HashMap cho phép giá trị null, nhưng việc sử dụng null có thể gây lỗi hoặc khiến mã khó bảo trì.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSử dụng các thuật toán sẵn có\u003c/strong\u003e: Java Collections Framework cung cấp nhiều thuật toán như tìm kiếm, sắp xếp, và lặp qua các phần tử, giúp mã nguồn trở nên ngắn gọn và dễ đọc hơn.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eThận trọng với tính đồng bộ hóa\u003c/strong\u003e: Các Collection như Vector và Hashtable là đồng bộ, nhưng bạn nên cân nhắc khi sử dụng chúng trong môi trường đa luồng vì hiệu suất thấp.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"5-kết-luận\"\u003e5. Kết luận\u003c/h2\u003e\n\u003cp\u003eJava Collections Framework cung cấp một bộ công cụ mạnh mẽ giúp bạn xử lý dữ liệu một cách linh hoạt và hiệu quả. Bằng cách hiểu và áp dụng các loại Collection như List, Set, Queue, và Map, bạn có thể tối ưu hóa mã nguồn và cải thiện hiệu suất của ứng dụng. Sử dụng đúng cách các cấu trúc dữ liệu này giúp mã của bạn dễ bảo trì và mở rộng hơn.\u003c/p\u003e\n","description":null,"image":"/images/post/java_collection.jpg","permalink":"http://localhost:1313/blogs/java_collection/","title":"Java Collections"},{"content":"\u003ch1 id=\"java-exception-handling-quản-lý-lỗi-hiệu-quả-trong-ứng-dụng-java\"\u003eJava Exception Handling: Quản lý lỗi hiệu quả trong ứng dụng Java\u003c/h1\u003e\n\u003cp\u003eTrong lập trình, việc xử lý lỗi là một phần quan trọng để đảm bảo ứng dụng hoạt động một cách ổn định và đáng tin cậy. Java cung cấp một cơ chế mạnh mẽ để xử lý lỗi thông qua cơ chế \u003cstrong\u003eException Handling\u003c/strong\u003e. Trong bài viết này, chúng ta sẽ tìm hiểu về Exception Handling trong Java, các loại ngoại lệ (exceptions), cách sử dụng các cấu trúc điều khiển để xử lý ngoại lệ, và một số \u003cstrong\u003ebest practices\u003c/strong\u003e khi làm việc với exceptions.\u003c/p\u003e\n\u003ch2 id=\"exception-là-gì\"\u003eException là gì?\u003c/h2\u003e\n\u003cp\u003eTrong Java, \u003cstrong\u003eException\u003c/strong\u003e là một sự kiện bất thường xảy ra trong quá trình thực thi chương trình, khiến cho chương trình không thể tiếp tục thực hiện theo cách bình thường. Khi một ngoại lệ xảy ra, chương trình sẽ \u0026ldquo;ném\u0026rdquo; một ngoại lệ và có thể dừng lại nếu không có cơ chế xử lý phù hợp.\u003c/p\u003e\n\u003cp\u003eCác ngoại lệ có thể xảy ra vì nhiều lý do, chẳng hạn như:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eĐọc từ một tệp không tồn tại.\u003c/li\u003e\n\u003cli\u003eChia cho số 0.\u003c/li\u003e\n\u003cli\u003eTruy cập vào chỉ mục không hợp lệ trong mảng.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eJava cung cấp cơ chế để bắt và xử lý các ngoại lệ này để chương trình không bị dừng đột ngột.\u003c/p\u003e\n\u003ch2 id=\"các-loại-exception-trong-java\"\u003eCác loại Exception trong Java\u003c/h2\u003e\n\u003cp\u003eTrong Java, có hai loại ngoại lệ chính:\u003c/p\u003e\n\u003ch3 id=\"1-checked-exceptions\"\u003e1. Checked Exceptions\u003c/h3\u003e\n\u003cp\u003eĐây là các ngoại lệ mà bạn \u003cstrong\u003ephải xử lý\u003c/strong\u003e hoặc khai báo trong mã nguồn. Các ngoại lệ này được kiểm tra tại thời điểm biên dịch. Một ví dụ điển hình là \u003ccode\u003eIOException\u003c/code\u003e (lỗi trong quá trình nhập/xuất).\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eVí dụ:\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003etry\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    FileReader file \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e FileReader(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;somefile.txt\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    BufferedReader fileInput \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e BufferedReader(file);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e} \u003cspan style=\"color:#66d9ef\"\u003ecatch\u003c/span\u003e (IOException e) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    System.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eprintln\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Lỗi khi đọc tệp: \u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e e.\u003cspan style=\"color:#a6e22e\"\u003egetMessage\u003c/span\u003e());\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"2-unchecked-exceptions\"\u003e2. Unchecked Exceptions\u003c/h3\u003e\n\u003cp\u003eĐây là các ngoại lệ \u003cstrong\u003ekhông yêu cầu\u003c/strong\u003e bạn phải xử lý hoặc khai báo, và chúng xảy ra trong quá trình thực thi. Các ngoại lệ này là con của \u003ccode\u003eRuntimeException\u003c/code\u003e. Một ví dụ điển hình là \u003ccode\u003eNullPointerException\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eVí dụ:\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eString str \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enull\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eSystem.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eprintln\u003c/span\u003e(str.\u003cspan style=\"color:#a6e22e\"\u003elength\u003c/span\u003e());  \u003cspan style=\"color:#75715e\"\u003e// NullPointerException\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"cấu-trúc-của-exception-handling-trong-java\"\u003eCấu trúc của Exception Handling trong Java\u003c/h2\u003e\n\u003cp\u003eJava cung cấp một số cấu trúc điều khiển để xử lý ngoại lệ, bao gồm:\u003c/p\u003e\n\u003ch3 id=\"1-try-catch\"\u003e1. try-catch\u003c/h3\u003e\n\u003cp\u003eĐây là cách cơ bản nhất để bắt và xử lý ngoại lệ. Bạn đặt đoạn mã có thể gây ra ngoại lệ trong khối \u003ccode\u003etry\u003c/code\u003e, và khối \u003ccode\u003ecatch\u003c/code\u003e sẽ bắt các ngoại lệ được ném ra.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eVí dụ:\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003etry\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e result \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e 10 \u003cspan style=\"color:#f92672\"\u003e/\u003c/span\u003e 0;  \u003cspan style=\"color:#75715e\"\u003e// ArithmeticException\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e} \u003cspan style=\"color:#66d9ef\"\u003ecatch\u003c/span\u003e (ArithmeticException e) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    System.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eprintln\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Lỗi chia cho số 0: \u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e e.\u003cspan style=\"color:#a6e22e\"\u003egetMessage\u003c/span\u003e());\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"2-try-catch-finally\"\u003e2. try-catch-finally\u003c/h3\u003e\n\u003cp\u003eKhối \u003ccode\u003efinally\u003c/code\u003e được sử dụng để đảm bảo rằng một đoạn mã luôn được thực thi, bất kể ngoại lệ có xảy ra hay không. Thường được sử dụng để giải phóng tài nguyên như đóng tệp hoặc cơ sở dữ liệu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eVí dụ:\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003etry\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e result \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e 10 \u003cspan style=\"color:#f92672\"\u003e/\u003c/span\u003e 2;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e} \u003cspan style=\"color:#66d9ef\"\u003ecatch\u003c/span\u003e (ArithmeticException e) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    System.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eprintln\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Lỗi chia cho số 0\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e} \u003cspan style=\"color:#66d9ef\"\u003efinally\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    System.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eprintln\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Khối finally luôn được thực thi.\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"3-throw\"\u003e3. throw\u003c/h3\u003e\n\u003cp\u003eTừ khóa \u003ccode\u003ethrow\u003c/code\u003e được sử dụng để ném một ngoại lệ rõ ràng trong mã nguồn.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eVí dụ:\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003echeckAge\u003c/span\u003e(\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e age) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e (age \u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003e 18) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003ethrow\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e IllegalArgumentException(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Tuổi không hợp lệ\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"4-throws\"\u003e4. throws\u003c/h3\u003e\n\u003cp\u003eTừ khóa \u003ccode\u003ethrows\u003c/code\u003e được sử dụng trong khai báo phương thức để chỉ ra rằng phương thức đó có thể ném một hoặc nhiều ngoại lệ.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eVí dụ:\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ereadFile\u003c/span\u003e() \u003cspan style=\"color:#66d9ef\"\u003ethrows\u003c/span\u003e IOException {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    FileReader file \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e FileReader(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;file.txt\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    BufferedReader fileInput \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e BufferedReader(file);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"best-practices-khi-làm-việc-với-exception-handling\"\u003eBest Practices khi làm việc với Exception Handling\u003c/h2\u003e\n\u003ch3 id=\"1-xử-lý-ngoại-lệ-cụ-thể\"\u003e1. Xử lý ngoại lệ cụ thể\u003c/h3\u003e\n\u003cp\u003eThay vì chỉ sử dụng một ngoại lệ chung như \u003ccode\u003eException\u003c/code\u003e, hãy cố gắng bắt và xử lý các ngoại lệ cụ thể hơn để có thể cung cấp thông tin chi tiết và chính xác hơn.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eVí dụ:\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003etry\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e[]\u003c/span\u003e numbers \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e5\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    numbers\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e10\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e 100;  \u003cspan style=\"color:#75715e\"\u003e// ArrayIndexOutOfBoundsException\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e} \u003cspan style=\"color:#66d9ef\"\u003ecatch\u003c/span\u003e (ArrayIndexOutOfBoundsException e) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    System.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eprintln\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Chỉ số mảng không hợp lệ\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"2-không-nên-sử-dụng-quá-nhiều-catch-blocks\"\u003e2. Không nên sử dụng quá nhiều catch blocks\u003c/h3\u003e\n\u003cp\u003eĐừng sử dụng quá nhiều khối \u003ccode\u003ecatch\u003c/code\u003e cho mỗi loại ngoại lệ riêng biệt nếu không thực sự cần thiết. Điều này có thể làm cho mã trở nên rối rắm và khó duy trì.\u003c/p\u003e\n\u003ch3 id=\"3-đảm-bảo-tài-nguyên-được-đóng-đúng-cách\"\u003e3. Đảm bảo tài nguyên được đóng đúng cách\u003c/h3\u003e\n\u003cp\u003eKhi làm việc với tài nguyên như tệp, cơ sở dữ liệu, hoặc kết nối mạng, hãy luôn đảm bảo rằng tài nguyên được đóng đúng cách trong khối \u003ccode\u003efinally\u003c/code\u003e hoặc sử dụng \u003cstrong\u003etry-with-resources\u003c/strong\u003e trong Java 7+.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eVí dụ:\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003etry\u003c/span\u003e (BufferedReader br \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e BufferedReader(\u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e FileReader(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;file.txt\u0026#34;\u003c/span\u003e))) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e// Đọc tệp\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e} \u003cspan style=\"color:#66d9ef\"\u003ecatch\u003c/span\u003e (IOException e) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    System.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eprintln\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Lỗi khi đọc tệp\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"4-sử-dụng-thông-báo-lỗi-chi-tiết\"\u003e4. Sử dụng thông báo lỗi chi tiết\u003c/h3\u003e\n\u003cp\u003eKhi ném ngoại lệ, cung cấp thông báo chi tiết về lý do lỗi. Điều này sẽ giúp người phát triển dễ dàng chẩn đoán và sửa lỗi.\u003c/p\u003e\n\u003ch3 id=\"5-không-sử-dụng-exception-để-kiểm-tra-điều-kiện-bình-thường\"\u003e5. Không sử dụng Exception để kiểm tra điều kiện bình thường\u003c/h3\u003e\n\u003cp\u003eNgoại lệ không nên được sử dụng để kiểm tra các điều kiện bình thường (ví dụ như kiểm tra nếu đối tượng là \u003ccode\u003enull\u003c/code\u003e). Thay vào đó, hãy sử dụng các kiểm tra điều kiện trước khi thực hiện hành động.\u003c/p\u003e\n\u003ch2 id=\"kết-luận\"\u003eKết luận\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eException Handling\u003c/strong\u003e là một kỹ thuật quan trọng giúp các ứng dụng Java trở nên ổn định và dễ dàng quản lý lỗi. Việc hiểu rõ cách sử dụng các cấu trúc như \u003ccode\u003etry-catch\u003c/code\u003e, \u003ccode\u003ethrow\u003c/code\u003e, \u003ccode\u003ethrows\u003c/code\u003e, và \u003ccode\u003efinally\u003c/code\u003e giúp bạn viết mã sạch, dễ bảo trì và dễ debug hơn. Hãy nhớ luôn xử lý ngoại lệ một cách cụ thể và hợp lý để chương trình của bạn có thể hoạt động mượt mà trong mọi tình huống.\u003c/p\u003e\n","description":null,"image":"/images/post/java_exception.jpg","permalink":"http://localhost:1313/blogs/java_exception/","title":"Java Exception Handling"},{"content":"\u003ch1 id=\"jvm-jdk-jre-trong-java-là-gì\"\u003eJVM, JDK, JRE trong Java là gì?\u003c/h1\u003e\n\u003cp\u003eTrong Java, ba khái niệm cơ bản mà bạn thường nghe đến là JVM (Java Virtual Machine), JDK (Java Development Kit) và JRE (Java Runtime Environment). Mặc dù chúng có liên quan chặt chẽ với nhau, nhưng mỗi thành phần này có vai trò và chức năng riêng biệt. Dưới đây là một cái nhìn chi tiết hơn về từng thành phần và sự khác biệt giữa chúng.\u003c/p\u003e\n\u003ch2 id=\"1-jvm-java-virtual-machine\"\u003e1. JVM (Java Virtual Machine)\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eChức năng:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eJVM là một máy ảo dùng để chạy mã bytecode của Java. Đây là nơi chuyển đổi mã bytecode thành mã máy phù hợp với hệ điều hành cụ thể.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eVai trò:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThực thi mã bytecode.\u003c/li\u003e\n\u003cli\u003eQuản lý bộ nhớ bằng Garbage Collection.\u003c/li\u003e\n\u003cli\u003eXử lý ngoại lệ.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eLưu ý:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eJVM không hoạt động độc lập mà cần các tài nguyên khác từ JRE.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2-jre-java-runtime-environment\"\u003e2. JRE (Java Runtime Environment)\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eChức năng:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eJRE cung cấp môi trường để chạy các ứng dụng Java, bao gồm:\n\u003cul\u003e\n\u003cli\u003eJVM.\u003c/li\u003e\n\u003cli\u003eCác thư viện lớp Java.\u003c/li\u003e\n\u003cli\u003eCác tệp hỗ trợ khác.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eVai trò:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eJRE được sử dụng bởi người dùng cuối để chạy ứng dụng Java mà không cần công cụ phát triển.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eKhông bao gồm:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTrình biên dịch và công cụ phát triển.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"3-jdk-java-development-kit\"\u003e3. JDK (Java Development Kit)\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eChức năng:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eJDK là bộ công cụ phát triển phần mềm Java, bao gồm mọi thứ cần thiết để viết, biên dịch và chạy ứng dụng Java.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eThành phần:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eJRE (bao gồm JVM).\u003c/li\u003e\n\u003cli\u003eTrình biên dịch (javac).\u003c/li\u003e\n\u003cli\u003eCông cụ gỡ lỗi và các công cụ phát triển khác.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eVai trò:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eJDK dành cho lập trình viên Java để xây dựng và kiểm thử ứng dụng.\u003c/li\u003e\n\u003c/ul\u003e\n","description":null,"image":"/images/post/jdk.jpg","permalink":"http://localhost:1313/blogs/jvm_jdk_jre/","title":"JVM, JDK, JRE trong Java là gì?"},{"content":"\u003ch1 id=\"thread-và-multithread-trong-java-xử-lý-đồng-thời-trong-ứng-dụng-java\"\u003eThread và Multithread trong Java: Xử lý đồng thời trong ứng dụng Java\u003c/h1\u003e\n\u003cp\u003eKhi phát triển ứng dụng Java, đôi khi bạn cần thực hiện các tác vụ đồng thời hoặc xử lý nhiều công việc cùng lúc mà không làm gián đoạn tiến trình của nhau. Điều này có thể giúp cải thiện hiệu suất của ứng dụng, đặc biệt là khi làm việc với các tác vụ nặng hoặc đòi hỏi thời gian chờ đợi như I/O (đọc/ghi tệp, kết nối mạng, v.v.). Trong bài viết này, chúng ta sẽ tìm hiểu về Thread và Multithreading trong Java, cách sử dụng chúng và các kỹ thuật tối ưu hiệu suất khi làm việc với đa luồng.\u003c/p\u003e\n\u003ch2 id=\"thread-là-gì\"\u003eThread là gì?\u003c/h2\u003e\n\u003cp\u003eThread (luồng) là đơn vị thực thi nhỏ nhất trong một tiến trình (process). Mỗi tiến trình có thể có một hoặc nhiều luồng. Trong Java, luồng cho phép một chương trình thực hiện nhiều tác vụ đồng thời (concurrent tasks). Mỗi luồng có thể thực thi một đoạn mã riêng biệt, cho phép chương trình thực hiện các công việc song song mà không cần phải chờ đợi lẫn nhau.\u003c/p\u003e\n\u003cp\u003eKhi bạn khởi động một ứng dụng Java, chương trình đó sẽ bắt đầu với một luồng chính (main thread). Tuy nhiên, bạn có thể tạo ra các luồng phụ (child threads) để thực hiện các tác vụ khác nhau trong nền.\u003c/p\u003e\n\u003ch2 id=\"tạo-và-quản-lý-thread-trong-java\"\u003eTạo và quản lý Thread trong Java\u003c/h2\u003e\n\u003cp\u003eJava cung cấp hai cách chính để tạo và quản lý luồng: Kế thừa lớp \u003ccode\u003eThread\u003c/code\u003e và Triển khai giao diện \u003ccode\u003eRunnable\u003c/code\u003e.\u003c/p\u003e\n\u003ch3 id=\"1-kế-thừa-lớp-thread\"\u003e1. Kế thừa lớp Thread\u003c/h3\u003e\n\u003cp\u003eCách đơn giản để tạo một luồng là kế thừa lớp \u003ccode\u003eThread\u003c/code\u003e và ghi đè phương thức \u003ccode\u003erun()\u003c/code\u003e của lớp này. Phương thức \u003ccode\u003erun()\u003c/code\u003e chứa mã mà luồng sẽ thực thi.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eVí dụ:\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eMyThread\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eextends\u003c/span\u003e Thread {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003e@Override\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003erun\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        System.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eprintln\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Luồng con đang thực thi...\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eMain\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003estatic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e(String\u003cspan style=\"color:#f92672\"\u003e[]\u003c/span\u003e args) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        MyThread thread \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e MyThread();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        thread.\u003cspan style=\"color:#a6e22e\"\u003estart\u003c/span\u003e();  \u003cspan style=\"color:#75715e\"\u003e// Khởi động luồng con\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eKhi bạn gọi phương thức \u003ccode\u003estart()\u003c/code\u003e, luồng con sẽ được khởi động và phương thức \u003ccode\u003erun()\u003c/code\u003e sẽ được gọi để thực thi công việc của luồng.\u003c/p\u003e\n\u003ch3 id=\"2-triển-khai-giao-diện-runnable\"\u003e2. Triển khai giao diện Runnable\u003c/h3\u003e\n\u003cp\u003eCách thứ hai là triển khai giao diện \u003ccode\u003eRunnable\u003c/code\u003e. Giao diện này có một phương thức \u003ccode\u003erun()\u003c/code\u003e tương tự như trong lớp \u003ccode\u003eThread\u003c/code\u003e, nhưng bạn cần phải khởi tạo một đối tượng \u003ccode\u003eThread\u003c/code\u003e và truyền đối tượng \u003ccode\u003eRunnable\u003c/code\u003e vào đó.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eVí dụ:\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eMyRunnable\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eimplements\u003c/span\u003e Runnable {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003e@Override\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003erun\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        System.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eprintln\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Luồng con đang thực thi...\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eMain\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003estatic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e(String\u003cspan style=\"color:#f92672\"\u003e[]\u003c/span\u003e args) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        MyRunnable myRunnable \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e MyRunnable();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        Thread thread \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e Thread(myRunnable);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        thread.\u003cspan style=\"color:#a6e22e\"\u003estart\u003c/span\u003e();  \u003cspan style=\"color:#75715e\"\u003e// Khởi động luồng con\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eTrong trường hợp này, \u003ccode\u003eRunnable\u003c/code\u003e cung cấp tính linh hoạt hơn, vì bạn có thể triển khai nó trong các lớp đã kế thừa một lớp khác mà không cần phải kế thừa lớp \u003ccode\u003eThread\u003c/code\u003e.\u003c/p\u003e\n\u003ch2 id=\"quản-lý-nhiều-luồng-multithreading\"\u003eQuản lý nhiều luồng (Multithreading)\u003c/h2\u003e\n\u003cp\u003eMultithreading trong Java cho phép nhiều luồng chạy đồng thời, chia sẻ tài nguyên và thực thi các tác vụ mà không gây xung đột. Java cung cấp một số công cụ và phương thức để làm việc với nhiều luồng cùng lúc, như việc đồng bộ hóa các luồng, quản lý sự kiện đồng bộ và xử lý các vấn đề liên quan đến dữ liệu chung.\u003c/p\u003e\n\u003ch3 id=\"1-tạo-nhiều-luồng\"\u003e1. Tạo nhiều luồng\u003c/h3\u003e\n\u003cp\u003eBạn có thể tạo nhiều luồng trong cùng một chương trình để thực hiện các tác vụ song song.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eVí dụ:\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eMyRunnable\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eimplements\u003c/span\u003e Runnable {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eprivate\u003c/span\u003e String task;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eMyRunnable\u003c/span\u003e(String task) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003ethis\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003etask\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e task;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003e@Override\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003erun\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        System.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eprintln\u003c/span\u003e(task \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34; đang thực thi...\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eMain\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003estatic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e(String\u003cspan style=\"color:#f92672\"\u003e[]\u003c/span\u003e args) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        MyRunnable task1 \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e MyRunnable(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Tác vụ 1\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        MyRunnable task2 \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e MyRunnable(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Tác vụ 2\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        Thread thread1 \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e Thread(task1);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        Thread thread2 \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e Thread(task2);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        thread1.\u003cspan style=\"color:#a6e22e\"\u003estart\u003c/span\u003e();  \u003cspan style=\"color:#75715e\"\u003e// Khởi động luồng 1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        thread2.\u003cspan style=\"color:#a6e22e\"\u003estart\u003c/span\u003e();  \u003cspan style=\"color:#75715e\"\u003e// Khởi động luồng 2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eTrong ví dụ trên, hai luồng sẽ chạy đồng thời và thực hiện hai tác vụ khác nhau.\u003c/p\u003e\n\u003ch3 id=\"2-đồng-bộ-hóa-các-luồng-synchronization\"\u003e2. Đồng bộ hóa các luồng (Synchronization)\u003c/h3\u003e\n\u003cp\u003eKhi nhiều luồng chia sẻ dữ liệu hoặc tài nguyên chung, bạn có thể gặp phải vấn đề xung đột (data race). Java cung cấp cơ chế đồng bộ hóa để đảm bảo rằng chỉ có một luồng có thể truy cập vào tài nguyên chung tại một thời điểm.\u003c/p\u003e\n\u003cp\u003eBạn có thể sử dụng từ khóa \u003ccode\u003esynchronized\u003c/code\u003e để đảm bảo tính đồng bộ khi truy cập các tài nguyên chia sẻ:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eVí dụ:\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eCounter\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eprivate\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e count \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e 0;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003esynchronized\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eincrement\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        count\u003cspan style=\"color:#f92672\"\u003e++\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003esynchronized\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003egetCount\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e count;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eMain\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003estatic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e(String\u003cspan style=\"color:#f92672\"\u003e[]\u003c/span\u003e args) \u003cspan style=\"color:#66d9ef\"\u003ethrows\u003c/span\u003e InterruptedException {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        Counter counter \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e Counter();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        Runnable task \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e () \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e (\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e i \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e 0; i \u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003e 1000; i\u003cspan style=\"color:#f92672\"\u003e++\u003c/span\u003e) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                counter.\u003cspan style=\"color:#a6e22e\"\u003eincrement\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        };\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        Thread thread1 \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e Thread(task);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        Thread thread2 \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e Thread(task);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        thread1.\u003cspan style=\"color:#a6e22e\"\u003estart\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        thread2.\u003cspan style=\"color:#a6e22e\"\u003estart\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        thread1.\u003cspan style=\"color:#a6e22e\"\u003ejoin\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        thread2.\u003cspan style=\"color:#a6e22e\"\u003ejoin\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        System.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eprintln\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Giá trị cuối cùng của count: \u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e counter.\u003cspan style=\"color:#a6e22e\"\u003egetCount\u003c/span\u003e());\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"3-quản-lý-luồng-với-executor-framework\"\u003e3. Quản lý luồng với Executor Framework\u003c/h3\u003e\n\u003cp\u003eThay vì tự mình quản lý các luồng, bạn có thể sử dụng \u003cstrong\u003eExecutor Framework\u003c/strong\u003e trong Java để quản lý các luồng một cách hiệu quả. \u003ccode\u003eExecutorService\u003c/code\u003e là một trong các interface phổ biến trong framework này, giúp bạn tạo và quản lý các luồng với ít mã nguồn hơn.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eVí dụ:\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e java.util.concurrent.ExecutorService;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e java.util.concurrent.Executors;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eMain\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003estatic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e(String\u003cspan style=\"color:#f92672\"\u003e[]\u003c/span\u003e args) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        ExecutorService executor \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e Executors.\u003cspan style=\"color:#a6e22e\"\u003enewFixedThreadPool\u003c/span\u003e(2);  \u003cspan style=\"color:#75715e\"\u003e// Tạo một nhóm luồng với 2 luồng\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        Runnable task1 \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e () \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e System.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eprintln\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Tác vụ 1 đang thực thi...\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        Runnable task2 \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e () \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e System.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eprintln\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Tác vụ 2 đang thực thi...\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        executor.\u003cspan style=\"color:#a6e22e\"\u003esubmit\u003c/span\u003e(task1);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        executor.\u003cspan style=\"color:#a6e22e\"\u003esubmit\u003c/span\u003e(task2);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        executor.\u003cspan style=\"color:#a6e22e\"\u003eshutdown\u003c/span\u003e();  \u003cspan style=\"color:#75715e\"\u003e// Đóng ExecutorService khi tất cả tác vụ hoàn thành\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"4-thread-safety-và-deadlock\"\u003e4. Thread Safety và Deadlock\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eThread Safety:\u003c/strong\u003e Để đảm bảo một ứng dụng Java hoạt động chính xác khi có nhiều luồng, bạn cần phải đảm bảo tính an toàn của luồng (thread safety) cho các tài nguyên và dữ liệu chia sẻ.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eDeadlock:\u003c/strong\u003e Deadlock xảy ra khi hai hoặc nhiều luồng bị mắc kẹt trong một tình huống mà chúng không thể tiếp tục thực thi. Điều này có thể xảy ra khi hai luồng đều cần tài nguyên mà luồng kia đang giữ và không giải phóng.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"kết-luận\"\u003eKết luận\u003c/h2\u003e\n\u003cp\u003eMultithreading trong Java là một công cụ mạnh mẽ giúp cải thiện hiệu suất ứng dụng, đặc biệt là trong các ứng dụng yêu cầu xử lý nhiều tác vụ đồng thời. Bằng cách sử dụng \u003ccode\u003eThread\u003c/code\u003e, \u003ccode\u003eRunnable\u003c/code\u003e, \u003ccode\u003eExecutorService\u003c/code\u003e, và các kỹ thuật đồng bộ hóa, bạn có thể xây dựng các ứng dụng hiệu quả và dễ dàng quản lý các tác vụ song song.\u003c/p\u003e\n\u003cp\u003eTuy nhiên, khi làm việc với đa luồng, bạn cần lưu ý đến các vấn đề như Thread Safety, Deadlock và Race Condition để đảm bảo ứng dụng hoạt động chính xác và không gặp phải các lỗi khó khắc phục.\u003c/p\u003e\n","description":null,"image":"/images/post/java_thread.jpg","permalink":"http://localhost:1313/blogs/java_thread/","title":"Thread và Multithread trong Java"},{"content":"\u003ch1 id=\"lập-trình-hướng-đối-tượng-oop-trong-java\"\u003eLập Trình Hướng Đối Tượng (OOP) trong Java\u003c/h1\u003e\n\u003cp\u003eLập trình hướng đối tượng (OOP) là một phương pháp lập trình mạnh mẽ và linh hoạt, cho phép lập trình viên tổ chức mã nguồn một cách có cấu trúc và dễ quản lý. OOP không chỉ giúp cải thiện khả năng tái sử dụng mã mà còn làm cho việc bảo trì và mở rộng ứng dụng trở nên dễ dàng hơn. Trong bối cảnh phát triển phần mềm hiện đại, OOP đã trở thành một tiêu chuẩn quan trọng, và Java là một trong những ngôn ngữ lập trình hàng đầu hỗ trợ các nguyên lý này.\u003c/p\u003e\n\u003cp\u003eTrong bài viết này, chúng ta sẽ tìm hiểu các nguyên lý cơ bản của lập trình hướng đối tượng trong Java và cách Java áp dụng chúng.\u003c/p\u003e\n\u003ch2 id=\"1-lớp-class-và-đối-tượng-object\"\u003e1. \u003cstrong\u003eLớp (Class) và Đối Tượng (Object)\u003c/strong\u003e\u003c/h2\u003e\n\u003ch3 id=\"lớp-class\"\u003eLớp (Class)\u003c/h3\u003e\n\u003cp\u003eLớp là một khuôn mẫu (template) để tạo ra các đối tượng. Lớp định nghĩa các thuộc tính (fields) và phương thức (methods) mà đối tượng của lớp đó sẽ có. Lớp là cấu trúc cơ bản trong OOP và mọi đối tượng đều là thể hiện của một lớp.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eCar\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    String color;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    String model;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003edrive\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        System.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eprintln\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Car is driving\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"đối-tượng-object\"\u003eĐối Tượng (Object)\u003c/h3\u003e\n\u003cp\u003eĐối tượng là một thể hiện của lớp. Khi bạn tạo một đối tượng từ lớp, bạn có thể truy cập các thuộc tính và phương thức đã được định nghĩa trong lớp đó.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eMain\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003estatic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e(String\u003cspan style=\"color:#f92672\"\u003e[]\u003c/span\u003e args) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        Car myCar \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e Car();  \u003cspan style=\"color:#75715e\"\u003e// Tạo đối tượng Car\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        myCar.\u003cspan style=\"color:#a6e22e\"\u003ecolor\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Red\u0026#34;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        myCar.\u003cspan style=\"color:#a6e22e\"\u003emodel\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Toyota\u0026#34;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        myCar.\u003cspan style=\"color:#a6e22e\"\u003edrive\u003c/span\u003e();  \u003cspan style=\"color:#75715e\"\u003e// Gọi phương thức drive\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"2-kế-thừa-inheritance\"\u003e2. \u003cstrong\u003eKế Thừa (Inheritance)\u003c/strong\u003e\u003c/h2\u003e\n\u003cp\u003eKế thừa là một tính năng mạnh mẽ của OOP, cho phép một lớp con (subclass) kế thừa các thuộc tính và phương thức từ lớp cha (superclass). Điều này giúp giảm thiểu sự lặp lại mã nguồn và tăng tính tái sử dụng.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eVehicle\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003estart\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        System.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eprintln\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Vehicle is starting\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eCar\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eextends\u003c/span\u003e Vehicle {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003edrive\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        System.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eprintln\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Car is driving\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eMain\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003estatic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e(String\u003cspan style=\"color:#f92672\"\u003e[]\u003c/span\u003e args) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        Car myCar \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e Car();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        myCar.\u003cspan style=\"color:#a6e22e\"\u003estart\u003c/span\u003e();  \u003cspan style=\"color:#75715e\"\u003e// Phương thức kế thừa từ Vehicle\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        myCar.\u003cspan style=\"color:#a6e22e\"\u003edrive\u003c/span\u003e();  \u003cspan style=\"color:#75715e\"\u003e// Phương thức riêng của Car\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eTrong ví dụ trên, lớp \u003ccode\u003eCar\u003c/code\u003e kế thừa phương thức \u003ccode\u003estart()\u003c/code\u003e từ lớp \u003ccode\u003eVehicle\u003c/code\u003e, nhưng cũng có thể định nghĩa các phương thức riêng của mình.\u003c/p\u003e\n\u003ch2 id=\"3-đa-hình-polymorphism\"\u003e3. \u003cstrong\u003eĐa Hình (Polymorphism)\u003c/strong\u003e\u003c/h2\u003e\n\u003cp\u003eTính đa hình là một trong những tính năng quan trọng của lập trình hướng đối tượng (OOP). Nó cho phép các đối tượng của các lớp khác nhau có thể được xử lý thông qua một interface chung. Đặc biệt, đa hình cho phép các đối tượng của các lớp khác nhau có thể thực thi các phương thức có cùng tên nhưng thực hiện hành động khác nhau. Điều này giúp mã trở nên linh hoạt, dễ mở rộng và bảo trì hơn. Có 2 loại đa hình trong Java:\u003c/p\u003e\n\u003ch3 id=\"đa-hình-thông-qua-kế-thừa-compile-time-polymorphism\"\u003eĐa hình thông qua kế thừa (Compile-time Polymorphism)\u003c/h3\u003e\n\u003cp\u003eĐây là loại đa hình được thực hiện tại thời điểm biên dịch. Trong Java, đa hình ở thời điểm biên dịch thường được thực hiện qua \u003cstrong\u003ephương thức nạp chồng\u003c/strong\u003e (method overloading) và \u003cstrong\u003etoán tử nạp chồng\u003c/strong\u003e (operator overloading). Tuy nhiên, Java không hỗ trợ toán tử nạp chồng, nhưng có thể thực hiện nạp chồng phương thức trong cùng một lớp hoặc lớp con.\u003c/p\u003e\n\u003cp\u003eVí dụ:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eCalculator\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eadd\u003c/span\u003e(\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e a, \u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e b) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e a \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e b;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003edouble\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eadd\u003c/span\u003e(\u003cspan style=\"color:#66d9ef\"\u003edouble\u003c/span\u003e a, \u003cspan style=\"color:#66d9ef\"\u003edouble\u003c/span\u003e b) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e a \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e b;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eMain\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003estatic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e(String\u003cspan style=\"color:#f92672\"\u003e[]\u003c/span\u003e args) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        Calculator calc \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e Calculator();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        System.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eprintln\u003c/span\u003e(calc.\u003cspan style=\"color:#a6e22e\"\u003eadd\u003c/span\u003e(2, 3));       \u003cspan style=\"color:#75715e\"\u003e// In ra 5\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        System.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eprintln\u003c/span\u003e(calc.\u003cspan style=\"color:#a6e22e\"\u003eadd\u003c/span\u003e(2.\u003cspan style=\"color:#a6e22e\"\u003e5\u003c/span\u003e, 3.\u003cspan style=\"color:#a6e22e\"\u003e7\u003c/span\u003e));   \u003cspan style=\"color:#75715e\"\u003e// In ra 6.2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eTrong ví dụ trên, phương thức \u003ccode\u003eadd\u003c/code\u003e có thể chấp nhận hai tham số \u003ccode\u003eint\u003c/code\u003e hoặc \u003ccode\u003edouble\u003c/code\u003e, điều này cho thấy tính đa hình của phương thức nạp chồng.\u003c/p\u003e\n\u003ch3 id=\"đa-hình-thông-qua-kế-thừa-runtime-polymorphism\"\u003eĐa hình thông qua kế thừa (Runtime Polymorphism)\u003c/h3\u003e\n\u003cp\u003eĐây là loại đa hình được thực hiện tại thời điểm chạy, thông qua cơ chế \u003cstrong\u003eoverride\u003c/strong\u003e phương thức của lớp con. Khi một phương thức trong lớp con có cùng tên và chữ ký với phương thức trong lớp cha, phương thức trong lớp con sẽ \u0026ldquo;ghi đè\u0026rdquo; phương thức trong lớp cha. Tính đa hình ở đây cho phép một đối tượng lớp con thực thi phương thức của lớp cha nhưng với hành động của lớp con.\u003c/p\u003e\n\u003cp\u003eVí dụ:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eAnimal\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esound\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        System.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eprintln\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Animal makes a sound\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eDog\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eextends\u003c/span\u003e Animal {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003e@Override\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esound\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        System.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eprintln\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Dog barks\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eCat\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eextends\u003c/span\u003e Animal {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003e@Override\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esound\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        System.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eprintln\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Cat meows\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eMain\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003estatic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e(String\u003cspan style=\"color:#f92672\"\u003e[]\u003c/span\u003e args) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        Animal myAnimal \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e Animal();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        Animal myDog \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e Dog();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        Animal myCat \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e Cat();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        myAnimal.\u003cspan style=\"color:#a6e22e\"\u003esound\u003c/span\u003e();  \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        myDog.\u003cspan style=\"color:#a6e22e\"\u003esound\u003c/span\u003e();     \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        myCat.\u003cspan style=\"color:#a6e22e\"\u003esound\u003c/span\u003e();    \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eTrong ví dụ trên, mặc dù tất cả các đối tượng đều có kiểu \u003ccode\u003eAnimal\u003c/code\u003e, phương thức \u003ccode\u003esound\u003c/code\u003e được thực thi khác nhau tùy theo đối tượng thực tế (Dog, Cat hoặc Animal). Đây chính là tính đa hình trong OOP.\u003c/p\u003e\n\u003ch2 id=\"lợi-ích-của-đa-hình\"\u003eLợi ích của đa hình:\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eTăng tính linh hoạt\u003c/strong\u003e: Chúng ta có thể viết mã xử lý các đối tượng của nhiều lớp khác nhau mà không cần phải biết chính xác lớp của đối tượng.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eMở rộng dễ dàng\u003c/strong\u003e: Việc thêm các lớp mới vào hệ thống mà không làm thay đổi mã hiện tại.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eDễ bảo trì\u003c/strong\u003e: Mã trở nên dễ bảo trì hơn khi các thay đổi chỉ cần thực hiện ở các lớp con thay vì thay đổi mã trong toàn bộ chương trình.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eTính đa hình là một phần không thể thiếu trong lập trình hướng đối tượng, giúp các lập trình viên xây dựng các ứng dụng dễ bảo trì, mở rộng và linh hoạt.\u003c/p\u003e\n\u003ch2 id=\"4-đóng-gói-encapsulation\"\u003e4. \u003cstrong\u003eĐóng Gói (Encapsulation)\u003c/strong\u003e\u003c/h2\u003e\n\u003cp\u003eĐóng gói là cơ chế bảo vệ dữ liệu bên trong đối tượng, ngăn chặn sự truy cập trực tiếp từ bên ngoài và chỉ cung cấp các phương thức công khai để thao tác với dữ liệu. Điều này giúp bảo vệ dữ liệu và giữ mã nguồn sạch sẽ hơn.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ePerson\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eprivate\u003c/span\u003e String name;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eprivate\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e age;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e String \u003cspan style=\"color:#a6e22e\"\u003egetName\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e name;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esetName\u003c/span\u003e(String name) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003ethis\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ename\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e name;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003egetAge\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e age;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esetAge\u003c/span\u003e(\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e age) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e (age \u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e 0) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003ethis\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eage\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e age;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eMain\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003estatic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e(String\u003cspan style=\"color:#f92672\"\u003e[]\u003c/span\u003e args) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        Person person \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e Person();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        person.\u003cspan style=\"color:#a6e22e\"\u003esetName\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;John\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        person.\u003cspan style=\"color:#a6e22e\"\u003esetAge\u003c/span\u003e(25);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        System.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eprintln\u003c/span\u003e(person.\u003cspan style=\"color:#a6e22e\"\u003egetName\u003c/span\u003e() \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34; is \u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e person.\u003cspan style=\"color:#a6e22e\"\u003egetAge\u003c/span\u003e() \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34; years old\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eTrong ví dụ trên, thuộc tính \u003ccode\u003ename\u003c/code\u003e và \u003ccode\u003eage\u003c/code\u003e được đóng gói dưới dạng private, chỉ có thể truy cập và thay đổi thông qua các phương thức getter và setter công khai.\u003c/p\u003e\n\u003ch2 id=\"5-trừu-tượng-abstraction\"\u003e5. \u003cstrong\u003eTrừu Tượng (Abstraction)\u003c/strong\u003e\u003c/h2\u003e\n\u003cp\u003eTrừu tượng là quá trình che giấu chi tiết thực thi và chỉ cung cấp các phương thức và giao diện mà người dùng có thể sử dụng. Java hỗ trợ trừu tượng qua lớp trừu tượng (abstract class) và giao diện (interface).\u003c/p\u003e\n\u003ch3 id=\"lớp-trừu-tượng-abstract-class\"\u003eLớp trừu tượng (Abstract Class)\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eabstract\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eAnimal\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eabstract\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esound\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eDog\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eextends\u003c/span\u003e Animal {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003e@Override\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esound\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        System.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eprintln\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Dog barks\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eMain\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003estatic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e(String\u003cspan style=\"color:#f92672\"\u003e[]\u003c/span\u003e args) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        Animal myDog \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e Dog();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        myDog.\u003cspan style=\"color:#a6e22e\"\u003esound\u003c/span\u003e();  \u003cspan style=\"color:#75715e\"\u003e// Dog barks\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"giao-diện-interface\"\u003eGiao diện (Interface)\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003einterface\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eAnimal\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esound\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eDog\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eimplements\u003c/span\u003e Animal {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003e@Override\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esound\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        System.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eprintln\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Dog barks\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eMain\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003estatic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e(String\u003cspan style=\"color:#f92672\"\u003e[]\u003c/span\u003e args) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        Animal myDog \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e Dog();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        myDog.\u003cspan style=\"color:#a6e22e\"\u003esound\u003c/span\u003e();  \u003cspan style=\"color:#75715e\"\u003e// Dog barks\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"tóm-tắt-lập-trình-hướng-đối-tượng-trong-java\"\u003eTóm Tắt Lập Trình Hướng Đối Tượng trong Java\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eLớp và Đối Tượng\u003c/strong\u003e: Mọi ứng dụng Java đều được xây dựng từ các lớp và đối tượng.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eKế Thừa\u003c/strong\u003e: Giúp tái sử dụng mã và mở rộng các lớp hiện có.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eĐa Hình\u003c/strong\u003e: Cho phép một phương thức hoặc đối tượng có thể có nhiều hành vi khác nhau.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eĐóng Gói\u003c/strong\u003e: Giúp bảo vệ dữ liệu và quản lý cách thức truy cập và thay đổi dữ liệu.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eTrừu Tượng\u003c/strong\u003e: Giúp ẩn các chi tiết thực thi và chỉ cung cấp các giao diện cho người dùng.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eJava với các nguyên lý OOP này giúp lập trình viên có thể xây dựng những ứng dụng mạnh mẽ, dễ bảo trì, dễ mở rộng và bảo mật cao.\u003c/p\u003e\n","description":null,"image":"/images/post/java_oop.jpg","permalink":"http://localhost:1313/blogs/java_oop/","title":"Lập trình hướng đối tượng trong Java"}]